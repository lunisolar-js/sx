import { computeMoon, computeSolarTerm, computeYearLunarMonths } from '../src/calendar'
// import lunisolar from 'lunisolar'
import { JD } from '../src/class/jd'

const jdFormat = (jd: JD) => {
  let h = jd.hour
  let m = jd.minute
  let s = jd.second
  let ms = jd.millis
  if (ms > 500) s++
  if (s >= 60) m++, (s = 0)
  if (m >= 60) h++, (m = 0)
  return `${jd.format('YYYY-MM-DD')} ${String(h).padStart(2, '0')}:${String(m).padStart(
    2,
    '0'
  )}:${String(s).padStart(2, '0')}`
}

describe('test calendar', () => {
  it('2023 solarTerm', () => {
    // computeYearQs(2023)
    computeYearLunarMonths(2023)

    const toBe = [
      '2022-12-22 05:48:11冬至',
      '2023-01-05 23:04:49小寒',
      '2023-01-20 16:29:31大寒',
      '2023-02-04 10:42:31立春',
      '2023-02-19 06:34:16雨水',
      '2023-03-06 04:36:13惊蛰',
      '2023-03-21 05:24:24春分',
      '2023-04-05 09:13:03清明',
      '2023-04-20 16:13:36谷雨',
      '2023-05-06 02:18:45立夏',
      '2023-05-21 15:09:09小满',
      '2023-06-06 06:18:20芒种',
      '2023-06-21 22:57:48夏至',
      '2023-07-07 16:30:40小暑',
      '2023-07-23 09:50:26大暑',
      '2023-08-08 02:22:52立秋',
      '2023-08-23 17:01:17处暑',
      '2023-09-08 05:26:42白露',
      '2023-09-23 14:49:57秋分',
      '2023-10-08 21:15:34寒露',
      '2023-10-24 00:20:50霜降',
      '2023-11-08 00:35:34立冬',
      '2023-11-22 22:02:41小雪',
      '2023-12-07 17:32:55大雪',
      '2023-12-22 11:27:20冬至'
    ]
    const stRes = computeSolarTerm(2023)

    expect(stRes.map(v => `${jdFormat(v.jd)}${v.name}`)).toEqual(toBe)
  })

  it('2023 newMoon', () => {
    const toBe = [
      '2022-12-23 18:16:51 359080.78千米',
      '2023-01-22 04:53:14 356569.10千米',
      '2023-02-20 15:05:49 359063.31千米',
      '2023-03-22 01:23:07 365978.34千米',
      '2023-04-20 12:12:30 375904.42千米',
      '2023-05-19 23:53:15 386914.88千米',
      '2023-06-18 12:37:07 396911.88千米',
      '2023-07-18 02:31:48 403968.80千米',
      '2023-08-16 17:38:08 406631.62千米',
      '2023-09-15 09:39:46 404204.24千米',
      '2023-10-15 01:55:07 397027.36千米',
      '2023-11-13 17:27:22 386576.34千米',
      '2023-12-13 07:32:00 375146.28千米',
      '2024-01-11 19:57:22 365203.54千米'
    ]
    const stRes = computeMoon(2023, 0)

    expect(stRes.map(v => `${jdFormat(v.jd)} ${v.r.toFixed(2)}千米`)).toEqual(toBe)
  })

  it('2000', () => {
    const toBe = [
      '1999-12-22 15:43:48冬至',
      '2000-01-06 09:00:42小寒',
      '2000-01-21 02:23:03大寒',
      '2000-02-04 20:40:24立春',
      '2000-02-19 16:33:18雨水',
      '2000-03-05 14:42:40惊蛰',
      '2000-03-20 15:35:15春分',
      '2000-04-04 19:31:58清明',
      '2000-04-20 02:39:30谷雨',
      '2000-05-05 12:50:10立夏',
      '2000-05-21 01:49:24小满',
      '2000-06-05 16:58:34芒种',
      '2000-06-21 09:47:43夏至',
      '2000-07-07 03:13:56小暑',
      '2000-07-22 20:42:41大暑',
      '2000-08-07 13:02:59立秋',
      '2000-08-23 03:48:31处暑',
      '2000-09-07 15:59:10白露',
      '2000-09-23 01:27:35秋分',
      '2000-10-08 07:38:13寒露',
      '2000-10-23 10:47:28霜降',
      '2000-11-07 10:48:04立冬',
      '2000-11-22 08:19:20小雪',
      '2000-12-07 03:37:02大雪',
      '2000-12-21 21:37:26冬至'
    ]
    const stRes = computeSolarTerm(2000)
    expect(stRes.map(v => `${jdFormat(v.jd)}${v.name}`)).toEqual(toBe)
  })
})
